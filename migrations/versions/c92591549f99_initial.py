"""initial

Revision ID: c92591549f99
Revises: 
Create Date: 2025-01-13 19:16:38.684890

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c92591549f99'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_extended_users_email', table_name='extended_users')
    op.drop_index('ix_extended_users_user_id', table_name='extended_users')
    op.drop_table('extended_users')
    op.drop_table('challenge_participants')
    op.drop_table('yearly_archive')
    op.drop_table('group_goals')
    op.drop_table('running_log')
    op.drop_table('teams')
    op.drop_table('team_members')
    op.drop_table('challenges')
    op.alter_column('users', 'user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'chat_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True,
               existing_server_default=sa.text('("group")'))
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.alter_column('users', 'chat_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True,
               existing_server_default=sa.text('("group")'))
    op.alter_column('users', 'username',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'user_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.create_table('challenges',
    sa.Column('challenge_id', sa.INTEGER(), nullable=True),
    sa.Column('title', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('start_date', sa.DATE(), nullable=True),
    sa.Column('end_date', sa.DATE(), nullable=True),
    sa.Column('goal_km', sa.REAL(), nullable=True),
    sa.Column('created_by', sa.TEXT(), nullable=True),
    sa.Column('chat_id', sa.TEXT(), nullable=True),
    sa.Column('is_system', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True),
    sa.PrimaryKeyConstraint('challenge_id')
    )
    op.create_table('team_members',
    sa.Column('team_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.TEXT(), nullable=True),
    sa.Column('joined_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.team_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], )
    )
    op.create_table('teams',
    sa.Column('team_id', sa.INTEGER(), nullable=True),
    sa.Column('team_name', sa.TEXT(), nullable=True),
    sa.Column('created_by', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('team_id')
    )
    op.create_table('running_log',
    sa.Column('log_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.TEXT(), nullable=True),
    sa.Column('km', sa.REAL(), nullable=True),
    sa.Column('date_added', sa.DATE(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('chat_id', sa.TEXT(), nullable=True),
    sa.Column('chat_type', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('group_goals',
    sa.Column('year', sa.INTEGER(), nullable=True),
    sa.Column('total_goal', sa.REAL(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('year')
    )
    op.create_table('yearly_archive',
    sa.Column('year', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.TEXT(), nullable=True),
    sa.Column('username', sa.TEXT(), nullable=True),
    sa.Column('yearly_goal', sa.REAL(), nullable=True),
    sa.Column('yearly_progress', sa.REAL(), nullable=True)
    )
    op.create_table('challenge_participants',
    sa.Column('challenge_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.TEXT(), nullable=True),
    sa.Column('progress', sa.REAL(), server_default=sa.text('0'), nullable=True),
    sa.Column('joined_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.challenge_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], )
    )
    op.create_table('extended_users',
    sa.Column('user_id', sa.TEXT(), nullable=True),
    sa.Column('email', sa.TEXT(), nullable=True),
    sa.Column('password_hash', sa.TEXT(), nullable=True),
    sa.Column('auth_type', sa.TEXT(), server_default=sa.text("'telegram'"), nullable=True),
    sa.Column('last_login', sa.DATETIME(), nullable=True),
    sa.Column('last_password_change', sa.DATETIME(), nullable=True),
    sa.Column('failed_login_attempts', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('is_locked', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True),
    sa.Column('notification_preferences', sa.TEXT(), nullable=True),
    sa.Column('privacy_settings', sa.TEXT(), nullable=True),
    sa.Column('timezone', sa.TEXT(), nullable=True),
    sa.Column('language', sa.TEXT(), server_default=sa.text("'ru'"), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('ix_extended_users_user_id', 'extended_users', ['user_id'], unique=False)
    op.create_index('ix_extended_users_email', 'extended_users', ['email'], unique=False)
    # ### end Alembic commands ###
