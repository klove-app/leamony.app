"""add email and password fields to user model

Revision ID: 528c787147be
Revises: 9cdef2fa7c6d
Create Date: 2025-01-15 19:41:02.791007

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '528c787147be'
down_revision: Union[str, None] = '9cdef2fa7c6d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_extended_users_email', table_name='extended_users')
    op.drop_index('ix_extended_users_user_id', table_name='extended_users')
    op.drop_table('extended_users')
    op.add_column('users', sa.Column('email', sa.String(), nullable=True))
    op.add_column('users', sa.Column('password', sa.String(), nullable=True))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_column('users', 'password')
    op.drop_column('users', 'email')
    op.create_table('extended_users',
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('auth_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('auth_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('auth_code_expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_password_change', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('failed_login_attempts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_locked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('notification_preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('privacy_settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='extended_users_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='extended_users_pkey')
    )
    op.create_index('ix_extended_users_user_id', 'extended_users', ['user_id'], unique=False)
    op.create_index('ix_extended_users_email', 'extended_users', ['email'], unique=False)
    # ### end Alembic commands ###
